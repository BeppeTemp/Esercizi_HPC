{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "type": "shell",
      "label": "C++ Compile and Run (Standard)",
      "command": "g++ -g ${fileDirname}/${fileBasename} -o ${fileBasenameNoExtension}.out && ./${fileBasenameNoExtension}.out && rm ${fileBasenameNoExtension}.out",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [
        "$eslint-compact"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      }
    },
    {
      "type": "shell",
      "label": "C Compile and Run (Standard)",
      "command": "gcc -g ${fileDirname}/${fileBasename} -o ${fileBasenameNoExtension}.out && ./${fileBasenameNoExtension}.out && rm ${fileBasenameNoExtension}.out",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [
        "$eslint-compact"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      }
    },
    {
      "type": "shell",
      "label": "C++ Compile and Run (Optimized)",
      "command": "g++ -O3 -g ${fileDirname}/${fileBasename} -o ${fileBasenameNoExtension}.out && ./${fileBasenameNoExtension}.out && rm ${fileBasenameNoExtension}.out",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [
        "$eslint-compact"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      }
    },
    {
      "type": "shell",
      "label": "C++ Compile and Run (OpenMP)",
      "command": "g++ -g ${fileDirname}/${fileBasename} -o ${fileBasenameNoExtension}.out -fopenmp && ./${fileBasenameNoExtension}.out && rm ${fileBasenameNoExtension}.out",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [
        "$eslint-compact"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      }
    },
    {
      "type": "shell",
      "label": "C++ Compile and Run (Vectorization)",
      "command": "g++ -mavx -mfma -mavx2 -g ${fileDirname}/${fileBasename} -o ${fileBasenameNoExtension}.out && ./${fileBasenameNoExtension}.out && rm ${fileBasenameNoExtension}.out",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [
        "$eslint-compact"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      }
    },
    {
      "type": "shell",
      "label": "C++ Compile and Run (Vectorization + OpenMP)",
      "command": "g++ -mavx -g ${fileDirname}/${fileBasename} -o ${fileBasenameNoExtension}.out -fopenmp && ./${fileBasenameNoExtension}.out && rm ${fileBasenameNoExtension}.out",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [
        "$eslint-compact"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      }
    },
    {
      "type": "shell",
      "label": "C++ Compile and Run (Vectorization + OpenMP + Optimizzation)",
      "command": "g++ -O3 -mavx -g ${fileDirname}/${fileBasename} -o ${fileBasenameNoExtension}.out -fopenmp && ./${fileBasenameNoExtension}.out && rm ${fileBasenameNoExtension}.out",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [
        "$eslint-compact"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      }
    },
    {
      "type": "shell",
      "label": "CUDA Compile (RTX 2060)",
      "command": "nvcc -lcublas -gencode=arch=compute_75,code=sm_75 -Xptxas=\"-v\" -g ${fileDirname}/${fileBasename} -o ${fileBasenameNoExtension}.out",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [
        "$eslint-compact"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    },
    {
      "type": "shell",
      "label": "CUDA Compile and Run (RTX 2060)",
      "command": "nvcc -lcublas -gencode=arch=compute_75,code=sm_75 -g ${fileDirname}/${fileBasename} -o ${fileBasenameNoExtension}.out && ./${fileBasenameNoExtension}.out && rm ${fileBasenameNoExtension}.out",
      "presentation": {
        "reveal": "always"
      },
      "problemMatcher": [
        "$eslint-compact"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      }
    }
  ]
}